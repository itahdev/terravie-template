version: '3.9'

services:
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - '${DOCKER_NGINX_PORT-8000}:80'
    volumes:
      - './public:/var/www/html/public'
    networks:
      - backend
    depends_on:
      - php

  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
      args:
        XDEBUG: 'true'
    volumes:
      - '.:/var/www/html'
      - './docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini'
    networks:
      - backend
    depends_on:
      - mysql
      - redis

  batch:
    build:
      context: .
      dockerfile: ./docker/batch/Dockerfile
    volumes:
      - '.:/var/www/html'
    networks:
      - backend
    depends_on:
      - mysql
      - redis

  mysql:
    platform: linux/x86_64
    image: 'mysql:8.0.23'
    ports:
      - '${DOCKER_MYSQL_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - 'mysql-data:/var/lib/mysql'
      - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/create-testing-database.sh'
    networks:
      - backend
    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '-p${DB_PASSWORD}' ]
      retries: 3
      timeout: 5s

  redis:
    image: 'redis:6.2'
    ports:
      - '${DOCKER_REDIS_PORT:-6379}:6379'
    volumes:
      - 'redis-data:/data'
    networks:
      - backend
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      retries: 3
      timeout: 5s

networks:
  backend:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
